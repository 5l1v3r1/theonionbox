# Configuration File for TheOnionBox
[config]
protocol = 1

[TheOnionBox]
# Address of your Onion Box;
# probably should be '0.0.0.0' (preferred)
# or 'localhost', yet might be something
# else, eg when operating with several ip's:
# host = localhost
# listen on all interfaces
host = 0.0.0.0

# To define the lower threshold for the notification system.
# Possible setting are DEBUG, INFO, NOTICE, WARNING, ERROR
# defaults to NOTICE, case insensitive
message_level = DEBUG

# Port for the Web Server
# 8080 should be fine in most cases!
port = 8080

# The duration we accept between the delivery of the login_page
# and the request for login (in seconds)
login_ttl = 30

# Define the webserver used for serving the pages:
# This is the standard WSGIRefServer server
# Remark: This server cannot process IE requests!
# Thus: Don't use it if you expect clients operating with IE!
server = default
# Enable this if you've CherryPy available
# server = cherrypy

# Shall we operate with SSL?
# Note: To actually make this running, you have to create a valid ssl certificate first:
# So run e.g.
# openssl req -new -x509 -keyout server.pem -out server.pem -days 365 -nodes
#
# DON'T distribute this combined private/public key to clients!
# (see http://www.piware.de/2011/01/creating-an-https-server-in-python/#comment-11380)
ssl = no
# ssl = yes
#
# The file that holds the Certificate!
# ssl_certificate = server.pem
# The file that holds the Key!
# ssl_key = private_key.pem

# When a NTP server is provided
# we use it's time to compensate the server's clock
# ntp_server = pool.ntp.org
# ntp_server = fritz.box


[TorRelay]
# Address of the Tor Relay
# Do NOT use 'localhost' but 127.0.0.1 to connect locally
tor_host = 127.0.0.1

# Control Port of the Tor Relay
tor_control_port = 9090

# Timeout when connecting to Tor's Control Port.
# Usually the connection should be established very quick;
# you may increase this if connecting to very remote systems.
# tor_control_timeout = 60

# The Number of Seconds we keep the connection to
# the Relay open after the last user disconnected
# Hint: The minimum reasonable TTL is > 30(s)
# eg. 1 day
# tor_ttl = 86400
# eg. 1 hour
# tor_ttl = 3600
# eg. forever
# tor_ttl = -1
tor_ttl = 30


# Switches to preserve the messages of the Relay
# Up to 400 messages (total) will be preserved
# The severity of these messages can be defined here
# There's one switch for ERR, WARN & NOTICE
# There's NO switch for INFO & DEBUG (as this would flood the memory without true value)
# Live - transmission of messages can be switched on/off in the client

# tor_preserve_ERR = no
tor_preserve_ERR = yes
# tor_preserve_WARN = no
tor_preserve_WARN = yes
# tor_preserve_NOTICE = no
tor_preserve_NOTICE = yes
